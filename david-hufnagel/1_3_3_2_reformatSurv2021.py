#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
This script is designed to take fasta files generated by Blake representing
2021 data for the surveillance project and reformat them to match the OFFLU
standards.
Created by David E. Hufnagel on Jun 17, 2022
"""
import sys
haFasta = open("BlakesPull_2021_HA.fasta")
mFasta = open("BlakesPull_2021_M.fasta")
naFasta = open("BlakesPull_2021_NA.fasta")
npFasta = open("BlakesPull_2021_NP.fasta")
nsFasta = open("BlakesPull_2021_NS.fasta")
paFasta = open("BlakesPull_2021_PA.fasta")
pb1Fasta = open("BlakesPull_2021_PB1.fasta")
pb2Fasta = open("BlakesPull_2021_PB2.fasta")
haOut = open("BlakesPull_2021_HA_reformat.fasta", "w")
mOut = open("BlakesPull_2021_M_reformat.fasta", "w")
naOut = open("BlakesPull_2021_NA_reformat.fasta", "w")
npOut = open("BlakesPull_2021_NP_reformat.fasta", "w")
nsOut = open("BlakesPull_2021_NS_reformat.fasta", "w")
paOut = open("BlakesPull_2021_PA_reformat.fasta", "w")
pb1Out = open("BlakesPull_2021_PB1_reformat.fasta", "w")
pb2Out = open("BlakesPull_2021_PB2_reformat.fasta", "w")





def SaveIntoDict(key, val, dictx):
    if key in dictx:
        dictx[key].append(val)
    else:
        dictx[key] = [val,]


def ReadFasta(fd): #Go through inp and store the file in a dict of key: defline   val: seq
    fastaDict = {}
    oldDef = ""; oldSeq = ""
    for line in fd:
        if line.startswith(">"):
            if oldSeq != "":
                SaveIntoDict(oldDef, oldSeq, fastaDict)
                oldDef = line.strip().strip(">")
                oldSeq = ""
            else:
                oldDef = line.strip().strip(">")
        else:
            oldSeq += line.strip()
    else:
        SaveIntoDict(oldDef, oldSeq, fastaDict)
        
    return(fastaDict)


def ProcessFasta(inpDict, outFd): #Convert defline formats and output the result
    for defline, seqs in inpDict.items():
        if len(seqs) > 1:
            print("ERROR!")
            sys.exit()
        else:
            seq = seqs[0]
            defLst = defline.strip().split("|")
            subtype = defLst[5]
            date = defLst[6]
            strain = defLst[-1]
            
            newline = ">%s|%s|Swine|USA||%s\n" % (strain, subtype, date)
            outFd.write(newline)
    





#Import fastas into dicts
haDict = ReadFasta(haFasta); mDict = ReadFasta(mFasta)
naDict = ReadFasta(naFasta); npDict = ReadFasta(npFasta)
nsDict = ReadFasta(nsFasta); paDict = ReadFasta(paFasta)
pb1Dict = ReadFasta(pb1Fasta); pb2Dict = ReadFasta(pb2Fasta)


#Convert defline formats and output the result
ProcessFasta(haDict, haOut)
ProcessFasta(mDict, mOut)
ProcessFasta(naDict, naOut)
ProcessFasta(npDict, npOut)
ProcessFasta(nsDict, nsOut)
ProcessFasta(paDict, paOut)
ProcessFasta(pb1Dict, pb1Out)
ProcessFasta(pb2Dict, pb2Out)









haFasta.close(); mFasta.close(); naFasta.close(); npFasta.close()
nsFasta.close(); paFasta.close(); pb1Fasta.close(); pb2Fasta.close()
haOut.close(); mOut.close(); naOut.close(); npOut.close()
nsOut.close(); paOut.close(); pb1Out.close(); pb2Out.close()